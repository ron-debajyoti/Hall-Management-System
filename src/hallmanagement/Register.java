/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hallmanagement;
import java.io.*;
import java.awt.Color;
import javax.swing.*;

/**
 *
 * @author ron_debajyoti
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
        setTitle("Registration Page");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        checkbox = new javax.swing.JComboBox<>();
        usernameArea = new javax.swing.JTextField();
        nameArea = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        confirmPasswordArea = new javax.swing.JPasswordField();
        passwordArea = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        jLabel1.setText("             Registration ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 12, 292, 67));

        jLabel2.setText("Username");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 85, 140, 36));

        jLabel3.setText("Password");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 133, 140, 35));

        jLabel4.setText("Confirm Password");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 174, 140, 35));

        jLabel5.setText("Name ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 221, 140, 35));

        jLabel6.setText("User type");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 262, 140, 34));

        checkbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Administrator" }));
        checkbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxActionPerformed(evt);
            }
        });
        getContentPane().add(checkbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 265, -1, -1));

        usernameArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameAreaActionPerformed(evt);
            }
        });
        getContentPane().add(usernameArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 89, 157, -1));
        getContentPane().add(nameArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 224, 157, -1));

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        getContentPane().add(registerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 378, 140, -1));

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 378, 140, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hallmanagement/reg.png"))); // NOI18N
        jLabel7.setText("jLabel7");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 180, 330));
        getContentPane().add(confirmPasswordArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 160, 30));
        getContentPane().add(passwordArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 160, 30));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hallmanagement/template4.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean studentcheck(String input){
       boolean bol = true;
       String line;
        try {
            FileReader fr = new FileReader("student.txt");
            BufferedReader br = new BufferedReader(fr);
           try {
               while ((line = br.readLine())!= null) {
                   String output = line.substring(0, line.indexOf('#'));
                   if(output.equals(input)){
                       bol = false;
                   }
               }
               br.close();
           } catch (IOException ex) {
               JOptionPane.showMessageDialog(this,ex,"Error",JOptionPane.ERROR_MESSAGE);
           }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this,ex,"Error",JOptionPane.ERROR_MESSAGE);
        }
       return bol;
    }
        /**
     * Check for existing admin id
     * @param s
     * @return boolean for the check
     */
     private boolean admincheck(String input){
       boolean bol = true;
       String line;
        try {
            FileReader fr = new FileReader("admin.txt");
            BufferedReader br = new BufferedReader(fr);
           try {
               while ((line = br.readLine())!= null) {
                   String output = line.substring(0, line.indexOf('#'));
                   if(output.equals(input)){
                       bol = false;
                   }
               }
               br.close();
           } catch (IOException ex) {
               JOptionPane.showMessageDialog(this,ex,"Error",JOptionPane.ERROR_MESSAGE);
           }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this,ex,"Error",JOptionPane.ERROR_MESSAGE);
        }
       return bol;
    }

    
    
    
    private void usernameAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameAreaActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        String ch = checkbox.getSelectedItem().toString();
        if(ch.equals("Student")){
            if((usernameArea.getText().length()>5)&&(usernameArea.getText().indexOf('#') == -1 )&&studentcheck(usernameArea.getText()) ) {
                if (passwordArea.getText().equals(confirmPasswordArea.getText())&&(passwordArea.getText().length()>5)){
                    try{
                        FileWriter out = new FileWriter("student.txt",true);
                        PrintWriter o = new PrintWriter(out);
                        o.println(usernameArea.getText()+"#"+passwordArea.getText());
                        o.close();
                        out.close();
                        File f = new File("std-"+usernameArea.getText()+".txt");
                        out = new FileWriter(f,true);
                        o = new PrintWriter(out);
                        o.println("Profile of Student:-");
                        o.println("Username: "+usernameArea.getText());                        
                        o.println("Name: "+nameArea.getText());
                        o.close();
                        out.close();
                        JOptionPane.showMessageDialog(this,"You have sucessfully registered","Registered",JOptionPane.INFORMATION_MESSAGE);
                        Main m = new Main();
                        dispose();
                    }
                    catch(IOException e){
                        JOptionPane.showMessageDialog(this,"Couldn't open the file","Error",JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    if(!passwordArea.getText().equals(confirmPasswordArea.getText())){
                        JOptionPane.showMessageDialog(this,"Password is not matched","Error",JOptionPane.ERROR_MESSAGE);
                    }
                    else if(passwordArea.getText().length()<6){
                        JOptionPane.showMessageDialog(this,"Password length is short.Min Lenth:6","Error",JOptionPane.ERROR_MESSAGE);
                    }
                    passwordArea.setText("");
                    passwordArea.requestFocus();
                }
            }
            else{
                if(usernameArea.getText().indexOf('#') != -1 ){
                    JOptionPane.showMessageDialog(this,"Invalid Username","Error",JOptionPane.ERROR_MESSAGE);
                }
                else if(usernameArea.getText().length()<6){
                    JOptionPane.showMessageDialog(this," Username length is too short .Min Lenth:6","Error",JOptionPane.ERROR_MESSAGE);
                }
                else if(!studentcheck(usernameArea.getText())){
                    JOptionPane.showMessageDialog(this,"Existing Username","Error",JOptionPane.ERROR_MESSAGE);
                }
                usernameArea.setText("");
                usernameArea.requestFocus();
            }
        }
        else if(ch.equals("Administrator")){
            if((usernameArea.getText().length()>5)&&usernameArea.getText().indexOf('#') == -1 &&admincheck(usernameArea.getText()) ) {
                if (passwordArea.getText().equals(confirmPasswordArea.getText())&&(passwordArea.getText().length()>5)){
                    try{
                        FileWriter out = new FileWriter("admin.txt",true);
                        PrintWriter o = new PrintWriter(out);
                        o.println(usernameArea.getText()+"#"+passwordArea.getText());
                        o.close();
                        out.close();
                        File f = new File("admin-"+usernameArea.getText()+".txt");
                        out = new FileWriter(f,true);
                        o = new PrintWriter(out);
                        o.println("Profile of Admin :-");
                        o.println("Username: "+usernameArea.getText());
                        o.println("Name: "+nameArea.getText());
                        o.close();
                        out.close();                        
                        JOptionPane.showMessageDialog(this,"You have sucessfully registered","Registered",JOptionPane.INFORMATION_MESSAGE);
                        Main m = new Main();
                        dispose();
                    }
                    catch(IOException e){
                        JOptionPane.showMessageDialog(this,"Could not open file","Error",JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    if(!passwordArea.getText().equals(confirmPasswordArea.getText())){
                        JOptionPane.showMessageDialog(this,"Password Mismatch","Error",JOptionPane.ERROR_MESSAGE);
                    }
                    else if(passwordArea.getText().length()<6){
                        JOptionPane.showMessageDialog(this,"Insufficient Password length\nMin Lenth:6","Error",JOptionPane.ERROR_MESSAGE);
                    }
                    passwordArea.setText("");
                    passwordArea.requestFocus();
                }
            }
            else{
                if(usernameArea.getText().indexOf('#') != -1 ){
                    JOptionPane.showMessageDialog(this,"Invalid Username","Error",JOptionPane.ERROR_MESSAGE);
                }
                else if(usernameArea.getText().length()<6){
                    JOptionPane.showMessageDialog(this,"Insufficient Username length\nMin Lenth:6","Error",JOptionPane.ERROR_MESSAGE);
                }
                else if(!admincheck(usernameArea.getText())){
                    JOptionPane.showMessageDialog(this,"Existing Username","Error",JOptionPane.ERROR_MESSAGE);
                }
                usernameArea.setText("");
                usernameArea.requestFocus();
            }
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void checkboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_checkboxActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> checkbox;
    private javax.swing.JPasswordField confirmPasswordArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField nameArea;
    private javax.swing.JPasswordField passwordArea;
    private javax.swing.JButton registerButton;
    private javax.swing.JTextField usernameArea;
    // End of variables declaration//GEN-END:variables
}
